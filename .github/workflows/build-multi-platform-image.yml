name: Build Multi Arch

on:
  workflow_call:

defaults:
  run:
    shell: bash

jobs:
  build_single_images:
    strategy:
      fail-fast: true
      matrix:
        include:
          - actions_runner: ubuntu-latest
            tag: AMD64
          - actions_runner: ubuntu-24.04-arm
            tag: ARM64

    name: "Build ${{ matrix.tag }} Image"
    runs-on: ${{ matrix.actions_runner }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Image & Save Cache
        env:
          TAG: ${{ matrix.tag }}
        run: |
          mkdir -p /tmp/images/cache/${{ matrix.tag }}
          make copy-env
          docker buildx build -t 311462405659.dkr.ecr.eu-west-1.amazonaws.com/notify-status-poller:${{ matrix.tag }} \
            --cache-to type=local,dest=/tmp/images/cache/${{ matrix.tag }},mode=max \
            --build-arg ENABLE_DEV_DEPS=false \
            --file docker/Dockerfile \
            .

      - name: Archive Cache
        uses: actions/upload-artifact@v4
        with:
          name: cache-${{ matrix.tag }}
          path:  /tmp/images/cache/${{ matrix.tag }}

  build_multi_arch_image:
    name: "Build Multi Architecture Image"
    runs-on: ubuntu-latest
    needs: [build_single_images]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker
        run: |
          echo '{"experimental": true, "features": { "containerd-snapshotter": true }}' | sudo tee -a /etc/docker/daemon.json
          sudo systemctl restart docker
          docker run --privileged --rm tonistiigi/binfmt --install all

      - uses: actions/download-artifact@v4
        with:
          path: /tmp/images/cache
          pattern: cache-*
          merge-multiple: false

      - name: Build & Save Image
        run: |
          make copy-env
          docker build \
            --platform linux/amd64,linux/arm64/v8 \
            --tag 311462405659.dkr.ecr.eu-west-1.amazonaws.com/notify-status-poller:latest \
            --build-arg ENABLE_DEV_DEPS=false \
            --cache-from type=local,src=/tmp/images/cache/cache-AMD64 \
            --cache-from type=local,src=/tmp/images/cache/cache-ARM64 \
            --file docker/Dockerfile \
            --load \
            .
          docker save -o /tmp/images/notify-status-poller.tar 311462405659.dkr.ecr.eu-west-1.amazonaws.com/notify-status-poller:latest

      - name: Archive image
        uses: actions/upload-artifact@v4
        with:
          name: latest-image
          path: |
            /tmp/images/notify-status-poller.tar

